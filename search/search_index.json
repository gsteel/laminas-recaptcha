{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Laminas\\ReCaptcha component Install You can install using Composer : composer require laminas/laminas-recaptcha Documentation Documentation is on the Laminas website: https://docs.laminas.dev/laminas-recaptcha","title":"Home"},{"location":"#laminasrecaptcha-component","text":"","title":"Laminas\\ReCaptcha component"},{"location":"#install","text":"You can install using Composer : composer require laminas/laminas-recaptcha","title":"Install"},{"location":"#documentation","text":"Documentation is on the Laminas website: https://docs.laminas.dev/laminas-recaptcha","title":"Documentation"},{"location":"basic-usage/","text":"Basic Usage Creating an instance of the reCAPTCHA service Instantiate a Laminas\\ReCaptcha\\ReCaptcha object, passing it your public and private keys: $recaptcha = new Laminas\\ReCaptcha\\ReCaptcha($pubKey, $privKey); Displaying the reCAPTCHA To render the reCAPTCHA, call the getHTML() method: echo $recaptcha->getHTML(); Verifying the form fields When the form is submitted, you should receive the field g-recaptcha-response in your submission. Pass that value to the reCAPTCHA object's verify() method: // Assuming a POST request was made: $result = $recaptcha->verify($_POST['g-recaptcha-response']); Once you have the result, test against it to see if it is valid. The result is a Laminas\\ReCaptcha\\Response object, which provides an isValid() method: // Validating the reCAPTCHA: if (! $result->isValid()) { // Failed validation } If you wish to automate the details of rendering and validating the reCAPTCHA, you should investigate the laminas-captcha reCAPTCHA adapter , or use that adapter as a backend for the CAPTCHA form element .","title":"Basic Usage"},{"location":"basic-usage/#basic-usage","text":"","title":"Basic Usage"},{"location":"basic-usage/#creating-an-instance-of-the-recaptcha-service","text":"Instantiate a Laminas\\ReCaptcha\\ReCaptcha object, passing it your public and private keys: $recaptcha = new Laminas\\ReCaptcha\\ReCaptcha($pubKey, $privKey);","title":"Creating an instance of the reCAPTCHA service"},{"location":"basic-usage/#displaying-the-recaptcha","text":"To render the reCAPTCHA, call the getHTML() method: echo $recaptcha->getHTML();","title":"Displaying the reCAPTCHA"},{"location":"basic-usage/#verifying-the-form-fields","text":"When the form is submitted, you should receive the field g-recaptcha-response in your submission. Pass that value to the reCAPTCHA object's verify() method: // Assuming a POST request was made: $result = $recaptcha->verify($_POST['g-recaptcha-response']); Once you have the result, test against it to see if it is valid. The result is a Laminas\\ReCaptcha\\Response object, which provides an isValid() method: // Validating the reCAPTCHA: if (! $result->isValid()) { // Failed validation } If you wish to automate the details of rendering and validating the reCAPTCHA, you should investigate the laminas-captcha reCAPTCHA adapter , or use that adapter as a backend for the CAPTCHA form element .","title":"Verifying the form fields"},{"location":"intro/","text":"Introduction Laminas\\ReCaptcha\\ReCaptcha provides a client for the reCAPTCHA Web Service . Per the reCAPTCHA site, \"reCAPTCHA is a free CAPTCHA service that helps to digitize books\". Each reCAPTCHA requires the user to input two words, the first of which is the actual CAPTCHA, and the second of which is a word from some scanned text that Optical Character Recognition (OCR) software has been unable to identify. The assumption is that if a user correctly provides the first word, the second is likely correctly entered as well, and can be used to improve OCR software for digitizing books. Additional requirements In order to use the reCAPTCHA service, you will need to sign up for an account and register one or more domains with the service in order to generate public and private keys.","title":"Introduction"},{"location":"intro/#introduction","text":"Laminas\\ReCaptcha\\ReCaptcha provides a client for the reCAPTCHA Web Service . Per the reCAPTCHA site, \"reCAPTCHA is a free CAPTCHA service that helps to digitize books\". Each reCAPTCHA requires the user to input two words, the first of which is the actual CAPTCHA, and the second of which is a word from some scanned text that Optical Character Recognition (OCR) software has been unable to identify. The assumption is that if a user correctly provides the first word, the second is likely correctly entered as well, and can be used to improve OCR software for digitizing books.","title":"Introduction"}]}